---
import Button from "../ui/Button.astro";
import SectionTitle from "../ui/SectionTitle.astro";
import type { MeetupContent } from "../../config/types";

export interface Props {
  content: MeetupContent;
}

const { content } = Astro.props;
---

{
  content.nextEvent && (
    <section class="next-meetup">
      <div class="next-meetup__container">
        <SectionTitle title="OUR NEXT MEETUP" />

        <div class="next-meetup__content">
          <div class="next-meetup__date">
            <span class="next-meetup__month">
              {new Date(content.nextEvent.date).toLocaleDateString("en-US", {
                month: "long",
              })}
            </span>
            <span class="next-meetup__day">
              {new Date(content.nextEvent.date).getDate()}
            </span>
            <span class="next-meetup__year">
              {new Date(content.nextEvent.date).getFullYear()}
            </span>
          </div>

          <div class="next-meetup__details">
            <h3 class="next-meetup__title">{content.nextEvent.title}</h3>
            {content.nextEvent.description && (
              <p class="next-meetup__description">
                {content.nextEvent.description}
              </p>
            )}
            <div class="next-meetup__meta">
              {content.nextEvent.time && (
                <p class="next-meetup__time">{content.nextEvent.time}</p>
              )}
              <p class="next-meetup__location">{content.nextEvent.location}</p>
              {content.nextEvent.address && (
                <p class="next-meetup__address">{content.nextEvent.address}</p>
              )}
            </div>

            <div class="next-meetup__actions">
              {content.nextEvent.registrationUrl && (
                <Button
                  href={content.nextEvent.registrationUrl}
                  variant="primary"
                  size="lg"
                >
                  Register via Meetup.com
                </Button>
              )}
              <Button
                internal
                href="/#how-to-find-us"
                variant="outline"
                size="lg"
              >
                Get Directions
              </Button>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

<style>
  .next-meetup__container {
    margin: 0 auto;
    min-width: 100%;
  }

  .next-meetup__content {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 3rem;
    align-items: start;
  }

  .next-meetup__date {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1.5rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    min-width: 120px;
  }

  .next-meetup__month {
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--color-primary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .next-meetup__day {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--color-text);
    margin: 0.25rem 0;
  }

  .next-meetup__year {
    font-size: 0.9rem;
    color: var(--color-text-secondary);
  }

  .next-meetup__details {
    padding: 0.5rem 0;
  }

  .next-meetup__title {
    font-size: 1.75rem;
    font-weight: 600;
    margin: 0 0 1rem 0;
    color: var(--color-text);
  }

  .next-meetup__meta {
    margin-bottom: 2rem;
  }

  .next-meetup__meta p {
    margin: 0.25rem 0;
    color: var(--color-text-secondary);
  }

  .next-meetup__time {
    font-weight: 600;
    color: var(--color-primary) !important;
  }

  .next-meetup__actions {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  @media (max-width: 768px) {
    .next-meetup__container {
      padding: 0 1rem;
    }

    .next-meetup__content {
      grid-template-columns: 1fr;
      gap: 2rem;
      text-align: center;
    }

    .next-meetup__actions {
      justify-content: center;
    }
  }
</style>
